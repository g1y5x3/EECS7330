% Construct the A matrix
% load('left_corners.mat')
load('right_corners.mat')

N = size(X_1,2);
A1 = zeros(N*2,12);
A2 = zeros(N*2,12);
A3 = zeros(N*2,12);
A4 = zeros(N*2,12);
A5 = zeros(N*2,12);

%   x(1,:) --- u
%   x(2,:) --- v
%
%   X(1,:) --- x
%   X(2,:) --- y
%   X(3,:) --- z

% Level 1
for i = 1 : N
    % Row 1
    A1(2*i-1,1:3) = X_1(:,i);                % x y z
    A1(2*i-1,4)   = 1;                       % 1
    A1(2*i-1,5:8) = [0 0 0 0];               % 0 0 0 0
    A1(2*i-1,9)   = -x_1(1,i) * X_1(1,i);    % -u * x
    A1(2*i-1,10)  = -x_1(1,i) * X_1(2,i);    % -u * y
    A1(2*i-1,11)  = -x_1(1,i) * X_1(3,i);    % -u * z
    A1(2*i-1,12)  = -x_1(1,i);               % -u
    
    % Row 2
    A1(2*i,1:4)   = [0 0 0 0];               % 0 0 0 0
    A1(2*i,5:7)   = X_1(:,i);                % x y z
    A1(2*i,8)     = 1;                       % 1
    A1(2*i,9)     = -x_1(2,i) * X_1(1,i);    % -v * x
    A1(2*i,10)    = -x_1(2,i) * X_1(2,i);    % -v * y
    A1(2*i,11)    = -x_1(2,i) * X_1(3,i);    % -v * z
    A1(2*i,12)    = -x_1(2,i);               % -v        
end

% Level 2
for i = 1 : N
    % Row 1
    A2(2*i-1,1:3) = X_2(:,i);                % x y z
    A2(2*i-1,4)   = 1;                       % 1
    A2(2*i-1,5:8) = [0 0 0 0];               % 0 0 0 0
    A2(2*i-1,9)   = -x_2(1,i) * X_2(1,i);    % -u * x
    A2(2*i-1,10)  = -x_2(1,i) * X_2(2,i);    % -u * y
    A2(2*i-1,11)  = -x_2(1,i) * X_2(3,i);    % -u * z
    A2(2*i-1,12)  = -x_2(1,i);               % -u
    
    % Row 2
    A2(2*i,1:4)   = [0 0 0 0];               % 0 0 0 0
    A2(2*i,5:7)   = X_2(:,i);                % x y z
    A2(2*i,8)     = 1;                       % 1
    A2(2*i,9)     = -x_2(2,i) * X_2(1,i);    % -v * x
    A2(2*i,10)    = -x_2(2,i) * X_2(2,i);    % -v * y
    A2(2*i,11)    = -x_2(2,i) * X_2(3,i);    % -v * z
    A2(2*i,12)    = -x_2(2,i);               % -v        
end

% Level 3
for i = 1 : N
    % Row 1
    A3(2*i-1,1:3) = X_3(:,i);                % x y z
    A3(2*i-1,4)   = 1;                       % 1
    A3(2*i-1,5:8) = [0 0 0 0];               % 0 0 0 0
    A3(2*i-1,9)   = -x_3(1,i) * X_3(1,i);    % -u * x
    A3(2*i-1,10)  = -x_3(1,i) * X_3(2,i);    % -u * y
    A3(2*i-1,11)  = -x_3(1,i) * X_3(3,i);    % -u * z
    A3(2*i-1,12)  = -x_3(1,i);               % -u
    
    % Row 2
    A3(2*i,1:4)   = [0 0 0 0];               % 0 0 0 0
    A3(2*i,5:7)   = X_3(:,i);                % x y z
    A3(2*i,8)     = 1;                       % 1
    A3(2*i,9)     = -x_3(2,i) * X_3(1,i);    % -v * x
    A3(2*i,10)    = -x_3(2,i) * X_3(2,i);    % -v * y
    A3(2*i,11)    = -x_3(2,i) * X_3(3,i);    % -v * z
    A3(2*i,12)    = -x_3(2,i);               % -v        
end

% Level 4
for i = 1 : N
    % Row 1
    A4(2*i-1,1:3) = X_4(:,i);                % x y z
    A4(2*i-1,4)   = 1;                       % 1
    A4(2*i-1,5:8) = [0 0 0 0];               % 0 0 0 0
    A4(2*i-1,9)   = -x_4(1,i) * X_4(1,i);    % -u * x
    A4(2*i-1,10)  = -x_4(1,i) * X_4(2,i);    % -u * y
    A4(2*i-1,11)  = -x_4(1,i) * X_4(3,i);    % -u * z
    A4(2*i-1,12)  = -x_4(1,i);               % -u
    
    % Row 2
    A4(2*i,1:4)   = [0 0 0 0];               % 0 0 0 0
    A4(2*i,5:7)   = X_4(:,i);                % x y z
    A4(2*i,8)     = 1;                       % 1
    A4(2*i,9)     = -x_4(2,i) * X_4(1,i);    % -v * x
    A4(2*i,10)    = -x_4(2,i) * X_4(2,i);    % -v * y
    A4(2*i,11)    = -x_4(2,i) * X_4(3,i);    % -v * z
    A4(2*i,12)    = -x_4(2,i);               % -v        
end

% Level 5
for i = 1 : N
    % Row 1
    A5(2*i-1,1:3) = X_5(:,i);                % x y z
    A5(2*i-1,4)   = 1;                       % 1
    A5(2*i-1,5:8) = [0 0 0 0];               % 0 0 0 0
    A5(2*i-1,9)   = -x_5(1,i) * X_5(1,i);    % -u * x
    A5(2*i-1,10)  = -x_5(1,i) * X_5(2,i);    % -u * y
    A5(2*i-1,11)  = -x_5(1,i) * X_5(3,i);    % -u * z
    A5(2*i-1,12)  = -x_5(1,i);               % -u
    
    % Row 2
    A5(2*i,1:4)   = [0 0 0 0];               % 0 0 0 0
    A5(2*i,5:7)   = X_5(:,i);                % x y z
    A5(2*i,8)     = 1;                       % 1
    A5(2*i,9)     = -x_5(2,i) * X_5(1,i);    % -v * x
    A5(2*i,10)    = -x_5(2,i) * X_5(2,i);    % -v * y
    A5(2*i,11)    = -x_5(2,i) * X_5(3,i);    % -v * z
    A5(2*i,12)    = -x_5(2,i);               % -v        
end

% Construct the final A matrix
A = vertcat(A1,A2,A3,A4,A5);

% Decomposition
[U, D, V] = svd(A);

% q is the last column of matrix V
q = V(:,12);
