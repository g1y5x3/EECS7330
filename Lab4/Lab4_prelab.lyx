#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding default
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Lab 4 Prelab
\end_layout

\begin_layout Author
Yixiang Gao
\end_layout

\begin_layout Section
Described what each command does
\end_layout

\begin_layout Itemize
$ source
\end_layout

\begin_deeper
\begin_layout Itemize
The source command can be used to load any functions file into the current
 shell script or a command prompt.
\end_layout

\begin_layout Itemize
It read and execute commands from given FILENAME and return.
\end_layout

\begin_layout Itemize
The pathnames in $PATH are used to find the directory containing FILENAME.
 If any ARGUMENTS are supplied, they become the positional parameters when
 FILENAME is executed.
\end_layout

\end_deeper
\begin_layout Itemize
$ catkin_init_workspace
\end_layout

\begin_deeper
\begin_layout Itemize
Initializes a catkin workspace by creating a top-level CMakeLists.txt.
\end_layout

\end_deeper
\begin_layout Itemize
$ rosrun
\end_layout

\begin_deeper
\begin_layout Itemize
rosrun will locate PACKAGE and try to find an executable named EXECUTABLE
 in the PACKAGE tree.
 If it finds it, it will run it with ARGS.
 
\end_layout

\end_deeper
\begin_layout Itemize
$ rostopic
\end_layout

\begin_deeper
\begin_layout Itemize
rostopic is a command-line tool for printing information about ROS Topics.
\end_layout

\end_deeper
\begin_layout Itemize
$ printenv | grep
\end_layout

\begin_deeper
\begin_layout Itemize
printenv: Print the values of the speci
\shape italic
f
\shape default
ied environment VARIABLE(s).
 If no VARIABLE is specified, print name and value pairs for them all.
\end_layout

\begin_layout Itemize
grep: The grep command is used to search text or searches the given file
 for lines containing a match to the given strings or words.
\end_layout

\end_deeper
\begin_layout Itemize
$ catkin_make 
\end_layout

\begin_deeper
\begin_layout Itemize
Creates the catkin workspace layout and invokes cmake and make.
\end_layout

\end_deeper
\begin_layout Itemize
$ rosnode 
\end_layout

\begin_deeper
\begin_layout Itemize
rosnode is a command-line tool for printing information about ROS Nodes.
\end_layout

\end_deeper
\begin_layout Itemize
$ rosmsg 
\end_layout

\begin_deeper
\begin_layout Itemize
rosmsg is a command-line tool for displaying information about ROS Message
 types.
\end_layout

\end_deeper
\begin_layout Itemize
$ catkin_create_pkg 
\end_layout

\begin_deeper
\begin_layout Itemize
Creates a new catkin package.
\end_layout

\end_deeper
\begin_layout Itemize
$ roscore 
\end_layout

\begin_deeper
\begin_layout Itemize
roscore will start up a ROS Master, a ROS Parameter Server and a rosout
 logging node.
\end_layout

\end_deeper
\begin_layout Itemize
$ rospack 
\end_layout

\begin_deeper
\begin_layout Itemize
rospack is a command-line tool for retrieving information about ROS packages
 available on the filesystem.
\end_layout

\end_deeper
\begin_layout Itemize
$ rossrv 
\end_layout

\begin_deeper
\begin_layout Itemize
rossrv is a command-line tool for displaying information about ROS Service
 types.
\end_layout

\end_deeper
\begin_layout Section
Describe what is each line for in CMakeList.txt file
\end_layout

\begin_layout Itemize
include_directories( )
\end_layout

\begin_deeper
\begin_layout Itemize
Specify where header files can be found for the code (most common in C/C++)
 being built.
\end_layout

\end_deeper
\begin_layout Itemize
add_executable( )
\end_layout

\begin_deeper
\begin_layout Itemize
To specify an executable target that must be built.
\end_layout

\end_deeper
\begin_layout Itemize
target_link_libraries( )
\end_layout

\begin_deeper
\begin_layout Itemize
To specify which libraries an executable target links against.
 This is done typically after an add_executable() call.
\end_layout

\end_deeper
\begin_layout Section
Describe following lines of .cpp code
\end_layout

\begin_layout Itemize
ros::init(argc, argv, “node_name”); 
\end_layout

\begin_deeper
\begin_layout Itemize
Initialize ROS.
 This allows ROS to do name remapping through the command line.
 This is also where we specify the name of our node.
 Node names must be unique in a running system.
\end_layout

\end_deeper
\begin_layout Itemize
ros::start(); 
\end_layout

\begin_deeper
\begin_layout Itemize
Start the node resource managers (communication, time, etc).
\end_layout

\end_deeper
\begin_layout Itemize
ROS_INFO_STREAM(“Hello, world!”); 
\end_layout

\begin_deeper
\begin_layout Itemize
Broadcast the message 
\begin_inset Quotes eld
\end_inset

Hello, world!
\begin_inset Quotes erd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Itemize
ros::spinOnce(); 
\end_layout

\begin_deeper
\begin_layout Itemize
Call all the callbacks waiting to be called on the queue when spinOnce()
 is called.
\end_layout

\end_deeper
\begin_layout Itemize
ros::shutdown()
\end_layout

\begin_deeper
\begin_layout Itemize
Stop the node's resources.
\end_layout

\end_deeper
\end_body
\end_document
